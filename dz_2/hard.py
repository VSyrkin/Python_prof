# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y

print('\nЗадача №1\n')

# equation = input('Введите уровнение вида y = kx + b: ')
# x = float(input('Введите x:'))
equation = 'y = -12x + 11111140.2121'
x = 2.5
equation = equation.replace(' ', '')
print('Введенное уровнение:\n', equation)

k = float(equation[equation.index('=') + 1:equation.index('x')])
if equation[equation.index('x') + 1] == '+':
    b = float(equation[equation.index('+') + 1:len(equation)])
elif equation[equation.index('x') + 1] == '-':
    b = float(equation[equation.index('x') + 1:len(equation)])
y = k * x + b
print('Решение уровнения при x = {}, y=:'.format(x), y)
print('x:=', x)
print('k:=', k)
print('b:=', b)

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'
#
#  Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

print('\nЗадача №2\n')

# date = input('Введите дату')
date = '01.11.1985'
print('Введенная дата:\n', date)
days_im_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
date_list = date.split('.')
if len(date) != 10:
    print('Не верный формат даты, ошибка длины')
elif len(date_list) != 3 or len(date_list[0]) != 2 or len(date_list[1]) != 2 or len(date_list[2]) != 4:
    print('Не верный формат даты, отсутсвуют точки или их положение не верно')
elif int(date_list[1]) > 12 or int(date_list[1]) < 1:
    print('Месяц введен неверно\n', 'Введен месяц: ', date_list[1])
elif int(date_list[0]) < 1 or int(date_list[0]) > days_im_month[int(date_list[1]) - 1]:
    print('День введен неверно\n', 'Введеннй день: ', date_list[0])
elif int(date_list[2]) < 1 or int(date_list[2]) > 9999:
    print('Год введен неверно\n', 'Введенный год: ', date_list[2])
else:
    print('Все хорошо, дата введена верно')

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты,
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

print('\nЗадача №3 (Можно не проверять)\n')

# room = int(input('Введите номер комнаты'))
room = 1500554433
print('Номер комнаты: ',room)

step = 0 #Блоки одинаковых этажей
floor =1 #Этаж
i = 1 #текущая позиция для поиска

#Найдем нужный блок одинаковых этажей
while i+(step**2) <= room:
    i += step**2
    floor += step
    step +=1


#Найдем этаж
j = 1 #текущая позиция этажа внутри блока одинаковых этажей
while i+step <= room:
    i += step
    j+=1
floor += j-1

#Найдем положение комнаты на этаже
room_num = 1

while i<room:
    room_num+=1
    i+=1

print ('Этаж: {}\nКомната на этаже: {}'.format(floor,room_num))